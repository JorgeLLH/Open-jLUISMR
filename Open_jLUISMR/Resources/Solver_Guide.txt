This is a short description of the solvers currently available in Open jLUISMR, based on the documentation available for "DifferentialEquations.jl" (for more info visit: https://diffeq.sciml.ai/stable/).

	-Tsit5(): The default solver and recommended for most cases. It is an explicit Runge-Kutta method, consider a different solver if you are solving stiff equations.
	-AutoTsit5(Rosenbrock23()): Recommended solver when the stiffness of the problem is unknown. 
	-Feagin14: High accuracy method for non-stiff problems. 
	-AitkenNeville: Parallelized euler explicit extrapolation method.
	-ROCK4: 4th order stabilized Runge-Kutta method with high stability for real eigenvalues.

For an example of a stiff equation see:
File->Open->Open_jLUISMR->Examples->Stiff_Equation

Please consider supporting the authors of "DifferentialEquations.jl" by checking their work:
@article{rackauckas2017differentialequations,
  title={Differentialequations.jl--a performant and feature-rich ecosystem for solving differential equations in julia},
  author={Rackauckas, Christopher and Nie, Qing},
  journal={Journal of Open Research Software},
  volume={5},
  number={1},
  year={2017},
  publisher={Ubiquity Press}
}
